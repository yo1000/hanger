<% if has_role?(:user, @project) %>
    <style>
      .hanger-widget {
        height: 240px;
        overflow: scroll;
      }
      .hanger-data-times {
        text-align: right;
        display: inline-block;
      }
      .hanger-data-times-min {
        width: 3.5em;
      }
      .hanger-data-times-hour {
        width: 2.35em;
      }
    </style>
    <div id="hanger-widget-<%= widget.id.to_s -%>" class="hanger-widget">
      <table class="data">
        <thead></thead>
        <tbody></tbody>
      </table>
    </div>
    <script type="text/javascript">
      var hangerWidget<%= widget.id.to_s -%>Scope = function () {
        var projectKey = '<%= h(@project.key) -%>';
        var issues = '<%= h(widget_properties["Issues"]) -%>';
        var severities = '<%= h(widget_properties["Severities"]) -%>';

        var $ = jQuery;
        var debtToMin = function (debt) {
          var times = debt;
          var min = 0;

          if (times && times.match(/[0-9]+d/)) {
            var debts = times.split('d');
            min += (debts[0] * 24 * 60);
            times = debts[1];
          }

          if (times && times.match(/[0-9]+h/)) {
            var debts = times.split('h');
            min += (debts[0] * 60);
            times = debts[1];
          }

          if (times && times.match(/[0-9]+min/)) {
            var debts = times.split('min');
            min += (debts[0] * 1);
          }

          return min;
        };

        var minToDebt = function(min) {
          var times = min;
          var debt = '';

          var days = Math.floor(times / (24 * 60));
          times %= (24 * 60);
          if (days > 0) {
            debt += '<span class="hanger-data-times">' + days + 'd</span>';
          }

          var hours = Math.floor(times / 60);
          times %= 60;
          if (debt != '' || hours > 0) {
            debt += '<span class="hanger-data-times hanger-data-times-hour">' + hours + 'h</span>';
          }

          return debt + '<span class="hanger-data-times hanger-data-times-min">' + times + 'min</span>';
        };

        $.ajax({
          url: '/api/issues/search?projectKeys=' + projectKey + '&ps=' + issues + '&severities=' + severities
        }).done(function(data) {
          var authorsHash = {};

          data.issues.forEach(function (elem) {
            if (!(elem.author in authorsHash)) {
              authorsHash[elem.author] = {
                'debt' : 0,
                'severity' : {}
              };
            }
            authorsHash[elem.author]['debt'] += debtToMin(elem.debt);

            if (!(elem.severity in authorsHash[elem.author]['severity'])) {
              authorsHash[elem.author]['severity'][elem.severity] = 0;
            }
            authorsHash[elem.author]['severity'][elem.severity] += 1;
          });

          var authorsArray = [];
          $.each(authorsHash, function (key, val) {
            authorsArray.push({
              'author' : key,
              'debt' : val.debt,
              'severity' : val.severity
            });
          });

          var $thead = $('#hanger-widget-<%= widget.id.to_s -%> thead');
          $thead.append('<th><h3><%= message('widget.hanger.name') -%></h3></th>');

          if (/BLOCKER/.test(severities)) {
            $thead.append('<th class="right"><i class="icon-severity-blocker"></i></th>');
          }

          if (/CRITICAL/.test(severities)) {
            $thead.append('<th class="right"><i class="icon-severity-critical"></i></th>');
          }

          if (/MAJOR/.test(severities)) {
            $thead.append('<th class="right"><i class="icon-severity-major"></i></th>');
          }

          if (/MINOR/.test(severities)) {
            $thead.append('<th class="right"><i class="icon-severity-minor"></i></th>');
          }

          if (/INFO/.test(severities)) {
            $thead.append('<th class="right"><i class="icon-severity-info"></i></th>');
          }

          $thead.append('<th class="right"><h3><%= message('widget.hanger.header.debt') -%></h3></th>');

          var $tbody = $('#hanger-widget-<%= widget.id.to_s -%> tbody');
          authorsArray.sort(function (x, y) { return y.debt - x.debt });

          var even = true;
          authorsArray.forEach(function(elem) {
            var $tr = $('<tr class="' + (even ? 'even' : 'odd') + '"></tr>');
            even = !even;

            $tr.append('<td>' + elem.author + '</td>');

            if (/BLOCKER/.test(severities)) {
              $tr.append('<td class="right">' + ('BLOCKER' in elem.severity ? elem.severity.BLOCKER : 0) + '</td>');
            }

            if (/CRITICAL/.test(severities)) {
              $tr.append('<td class="right">' + ('CRITICAL' in elem.severity ? elem.severity.CRITICAL : 0) + '</td>');
            }

            if (/MAJOR/.test(severities)) {
              $tr.append('<td class="right">' + ('MAJOR' in elem.severity ? elem.severity.MAJOR : 0) + '</td>');
            }

            if (/MINOR/.test(severities)) {
              $tr.append('<td class="right">' + ('MINOR' in elem.severity ? elem.severity.MINOR : 0) + '</td>');
            }

            if (/INFO/.test(severities)) {
              $tr.append('<td class="right">' + ('INFO' in elem.severity ? elem.severity.INFO : 0) + '</td>');
            }

            $tr.append('<td class="right">' + minToDebt(elem.debt) + '</td>');
            $tbody.append($tr);
          });
        }).fail(function ($xhr, textStatus, errorThrown) {
          console.log(textStatus);
          console.log(errorThrown);
        });
      };

      hangerWidget<%= widget.id.to_s -%>Scope();
    </script>
<% end %>
